head	1.5;
access;
symbols;
locks
	root:1.5; strict;
comment	@ * @;


1.5
date	2021.03.28.22.01.18;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2021.03.28.21.55.46;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2021.03.28.21.51.57;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2021.03.25.04.04.49;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2021.03.25.03.24.08;	author root;	state Exp;
branches;
next	;


desc
@@


1.5
log
@*** empty log message ***
@
text
@#include "headers.h"
#include "declaretions.h"

void* get_index(void *arg)
{
     int *index;
     ds_return_new_ch *ds_u;

//   printf("Begin:%s\n",__func__);
     ds_u = (ds_return_new_ch *)arg;

     index = (int *)malloc(sizeof(int) );
     if( index == NULL )
     {
           perror("malloc");
           (*fptr[0])((void *)"Failure");
     }
    
     for( *index =0  ; *index < strlen(ds_u->ma) ; *index = (*index)+1 )
     {
    	  if( *(ds_u->ma+(*index)) == ds_u->ch)
             return (void *)index;
     } 
     *index = -1;
 //  printf("End:%s\n",__func__);
    return (void *)index;
}

@


1.4
log
@*** empty log message ***
@
text
@a18 1
     printf("ch : %c\n",ds_u->ch); 
a20 1
          printf("index %d and ch in loop : %c\n", *index , *(ds_u->ma+(*index))); 
@


1.3
log
@*** empty log message ***
@
text
@d22 1
a22 1
          printf("ch in loop : %c\n", *(ds_u->ma+(*index)); 
@


1.2
log
@*** empty log message ***
@
text
@d9 1
a9 1
//     printf("Begin:%s\n",__func__);
d18 2
a19 1
     
d22 1
d27 1
a27 2
    
 //    printf("End:%s\n",__func__);
@


1.1
log
@Initial revision
@
text
@d9 1
a9 1
     printf("Begin:%s\n",__func__);
d12 3
a14 3
    index = (int *)malloc(sizeof(int) );
    if( index == NULL )
    {
d17 10
a26 10
    }

    for( *index =0  ; *index <= strlen(ds_u->ma) ; *index++ );
    {
          if( *(ds_u->ma+(*index)) == ds_u->ch)
		  return (void *)index;

    }    
    *index = -1;
    printf("End:%s\n",__func__);
@
